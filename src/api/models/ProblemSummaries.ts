/* tslint:disable */
/* eslint-disable */
/**
 * traO Judge API
 * traO Judge API (front â†” back)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProblemSummary } from './ProblemSummary';
import {
    ProblemSummaryFromJSON,
    ProblemSummaryFromJSONTyped,
    ProblemSummaryToJSON,
    ProblemSummaryToJSONTyped,
} from './ProblemSummary';

/**
 * 
 * @export
 * @interface ProblemSummaries
 */
export interface ProblemSummaries {
    /**
     * 
     * @type {number}
     * @memberof ProblemSummaries
     */
    total: number;
    /**
     * 
     * @type {Array<ProblemSummary>}
     * @memberof ProblemSummaries
     */
    problems: Array<ProblemSummary>;
}

/**
 * Check if a given object implements the ProblemSummaries interface.
 */
export function instanceOfProblemSummaries(value: object): value is ProblemSummaries {
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('problems' in value) || value['problems'] === undefined) return false;
    return true;
}

export function ProblemSummariesFromJSON(json: any): ProblemSummaries {
    return ProblemSummariesFromJSONTyped(json, false);
}

export function ProblemSummariesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProblemSummaries {
    if (json == null) {
        return json;
    }
    return {
        
        'total': json['total'],
        'problems': ((json['problems'] as Array<any>).map(ProblemSummaryFromJSON)),
    };
}

  export function ProblemSummariesToJSON(json: any): ProblemSummaries {
      return ProblemSummariesToJSONTyped(json, false);
  }

  export function ProblemSummariesToJSONTyped(value?: ProblemSummaries | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total': value['total'],
        'problems': ((value['problems'] as Array<any>).map(ProblemSummaryToJSON)),
    };
}

