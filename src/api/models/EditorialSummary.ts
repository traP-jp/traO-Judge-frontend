/* tslint:disable */
/* eslint-disable */
/**
 * traO Judge API
 * traO Judge API (front ↔ back)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 解説
 * @export
 * @interface EditorialSummary
 */
export interface EditorialSummary {
    /**
     * 解説ID
     * @type {number}
     * @memberof EditorialSummary
     */
    id?: number;
    /**
     * 作成日時
     * @type {Date}
     * @memberof EditorialSummary
     */
    createdAt?: Date;
    /**
     * 更新日時
     * @type {Date}
     * @memberof EditorialSummary
     */
    updatedAt?: Date;
    /**
     * 投稿者のユーザーID
     * @type {number}
     * @memberof EditorialSummary
     */
    authorId?: number;
    /**
     * 解説が全体公開かどうか.
     * 
     * * `true` - 公開
     * * `false` - 非公開 (問題の作者のみ閲覧可)
     * @type {boolean}
     * @memberof EditorialSummary
     */
    isPublic?: boolean;
}

/**
 * Check if a given object implements the EditorialSummary interface.
 */
export function instanceOfEditorialSummary(value: object): value is EditorialSummary {
    return true;
}

export function EditorialSummaryFromJSON(json: any): EditorialSummary {
    return EditorialSummaryFromJSONTyped(json, false);
}

export function EditorialSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditorialSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'authorId': json['authorId'] == null ? undefined : json['authorId'],
        'isPublic': json['isPublic'] == null ? undefined : json['isPublic'],
    };
}

  export function EditorialSummaryToJSON(json: any): EditorialSummary {
      return EditorialSummaryToJSONTyped(json, false);
  }

  export function EditorialSummaryToJSONTyped(value?: EditorialSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'authorId': value['authorId'],
        'isPublic': value['isPublic'],
    };
}

